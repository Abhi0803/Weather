{"version":3,"sources":["components/Input.jsx","components/TimeStamp.jsx","components/Table.jsx","components/WeatherData.jsx","components/Error.jsx","App.jsx","index.js"],"names":["Input","props","className","autoFocus","onChange","handleChange","value","city","placeholder","onClick","handle","getTime","time","date","Date","hours","getHours","minutes","getMinutes","seconds","getSeconds","substr","Time","year","getFullYear","month","getMonth","day","getDate","getFullTime","timeStamp","Table","scope","colSpan","data","main","feels_like","temp_min","temp_max","wind","speed","sys","sunrise","deg","visibility","pressure","humidity","sunset","WeatherData","s","dt","temp","name","country","weather","description","toUpperCase","slice","Error","style","fontSize","error","size","message","App","React","useState","url","apiData","setApiData","id","setData","isSet","setisSet","isFault","setisFault","document","body","clientWidth","seterror","apiUrl","useEffect","Axios","get","then","res","prev","catch","response","status","request","console","log","event","target","preventDefault","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.05abe23b.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Input(props) {\r\n\r\n  return (\r\n    <div className=\"inputfield\">\r\n      <form >\r\n        <input\r\n        className=\"input\"\r\n        autoFocus\r\n        onChange={props.handleChange}\r\n        value={props.city}\r\n        placeholder=\"Enter City Name\"\r\n        />\r\n\r\n        <button\r\n        onClick={props.handle}>\r\n        </button>\r\n\r\n      </form>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\n\r\nexport default Input;\r\n","\r\n\r\nfunction getTime(time) {\r\n  var date = new Date(time*1000);\r\n  var hours = date.getHours();\r\n  var minutes = \"0\" + date.getMinutes();\r\n  var seconds = \"0\" + date.getSeconds();\r\n  var convdataTime = hours + ':' + minutes.substr(-2) + ':' + seconds.substr(-2);\r\n  return (convdataTime);\r\n}\r\n\r\n\r\nfunction Time(props) {\r\n  let time = props.timeStamp;\r\n\r\n  function getFullTime(time) {\r\n    var months_arr = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];\r\n    var date = new Date(time*1000);\r\n    var year = date.getFullYear();\r\n    var month = months_arr[date.getMonth()];\r\n    var day = date.getDate();\r\n    var hours = date.getHours();\r\n    var minutes = \"0\" + date.getMinutes();\r\n    var seconds = \"0\" + date.getSeconds();\r\n    var convdataTime = hours + ':' + minutes.substr(-2) + ':' + seconds.substr(-2) + ' ' + month+'-'+(day >= 10 ? day: '0' + day )+'-'+year;\r\n\r\n    return (convdataTime);\r\n  }\r\n\r\n  return (getFullTime(time));\r\n\r\n}\r\n\r\nexport default Time;\r\nexport {getTime};\r\n","import React from 'react';\r\nimport {getTime} from './TimeStamp.jsx';\r\n\r\nfunction Table(props) {\r\nreturn(\r\n  <table className=\"table table-hover inline\">\r\n    <tbody className=\"inline-block\">\r\n      <tr>\r\n        <th scope=\"row\">Feels Like</th>\r\n        <td colSpan=\"2\">{props.data.main.feels_like + \" ℃\"}</td>\r\n      </tr>\r\n      <tr>\r\n        <th scope=\"row\">Min. Temperature</th>\r\n        <td colSpan=\"2\">{props.data.main.temp_min + \" ℃\"}</td>\r\n      </tr>\r\n      <tr>\r\n        <th scope=\"row\">Max. Temperature</th>\r\n        <td colSpan=\"2\">{props.data.main.temp_max + \" ℃\"}</td>\r\n      </tr>\r\n      <tr>\r\n        <th scope=\"row\">Wind Speed</th>\r\n        <td colSpan=\"2\">{props.data.wind.speed + \"Km/h\"}</td>\r\n      </tr>\r\n      <tr>\r\n        <th scope=\"row\">Sunrise</th>\r\n        <td colSpan=\"2\">{getTime(props.data.sys.sunrise)}</td>\r\n      </tr>\r\n    </tbody>\r\n      <tbody className=\"inline-block\">\r\n        <tr>\r\n          <th scope=\"row\">Wind Direction</th>\r\n          <td colSpan=\"2\">{props.data.wind.deg + \" °\"}</td>\r\n        </tr>\r\n        <tr>\r\n          <th scope=\"row\">Visibility</th>\r\n          <td colSpan=\"2\">{((props.data.visibility)/1000) + \" km\" }</td>\r\n        </tr>\r\n        <tr>\r\n          <th scope=\"row\">Pressure</th>\r\n          <td colSpan=\"2\">{props.data.main.pressure + \" mbar\"}</td>\r\n        </tr>\r\n        <tr>\r\n          <th scope=\"row\">Humidity</th>\r\n          <td colSpan=\"2\">{props.data.main.humidity + \"%\"}</td>\r\n        </tr>\r\n        <tr>\r\n          <th scope=\"row\">Sunset</th>\r\n          <td colSpan=\"2\">{getTime(props.data.sys.sunset)}</td>\r\n        </tr>\r\n    </tbody>\r\n  </table>\r\n)\r\n}\r\n export default Table;\r\n","import React from 'react';\r\nimport Time from './TimeStamp.jsx';\r\nimport Table from './Table.jsx'\r\n\r\nfunction WeatherData(props) {\r\n  var time = props.data.dt;\r\n\r\n  function capitalize(s)\r\n{\r\n    return s && s[0].toUpperCase() + s.slice(1);\r\n}\r\n\r\n  return (\r\n    <div>\r\n      <h1> {props.data.main.temp + \" ℃\"} </h1>\r\n      <h2> {props.data.name + \" (\" + props.data.sys.country  +  \")\"} </h2>\r\n      <h1> {capitalize(props.data.weather.description)} </h1>\r\n      <h4> Measured At : <Time timeStamp={time} /></h4>\r\n      <Table data={props.data} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default WeatherData;\r\n","import React  from 'react';\r\n\r\nfunction Error(props) {\r\n  return (\r\n    <div>\r\n      <figure >\r\n        <div className=\"sad-mac\"></div>\r\n    </figure>\r\n    <figcaption style={{fontSize: props.error.size}} className=\"sr-text\">\r\n      Error {props.error.error}: {props.error.message}\r\n    </figcaption>\r\n  </div>\r\n  );\r\n}\r\n\r\nexport default Error;\r\n// style=\r\n","import React from \"react\";\r\nimport Input from \"./components/Input.jsx\";\r\nimport WeatherData from \"./components/WeatherData.jsx\";\r\nimport Error from \"./components/Error.jsx\";\r\nimport Axios from \"axios\";\r\n\r\nfunction App() {\r\n  const [apiData, setApiData] = React.useState({\r\n    city: \"\",\r\n    url: \"\",\r\n  });\r\n  const [data, setData] = React.useState({\r\n    weather: {\r\n      id: null,\r\n      main: null,\r\n      description: null,\r\n    },\r\n    main: {\r\n      temp: null,\r\n      feels_like: null,\r\n      temp_min: null,\r\n      temp_max: null,\r\n      pressure: null,\r\n      humidity: null,\r\n    },\r\n    visibility: null,\r\n    wind: {\r\n      speed: null,\r\n      deg: null,\r\n    },\r\n    dt: null,\r\n    sys: {\r\n      id: null,\r\n      country: null,\r\n      sunrise: null,\r\n      sunset: null,\r\n    },\r\n    id: null,\r\n    name: null,\r\n  });\r\n  const [isSet, setisSet] = React.useState(false);\r\n  const [isFault, setisFault] = React.useState(false);\r\n  const [error, seterror] = React.useState({\r\n    error: 0,\r\n    message: \"\",\r\n    size: document.body.clientWidth * (84 / 1280) + \"px\",\r\n  });\r\n\r\n  const apiUrl = {\r\n    head: \"https://api.openweathermap.org/data/2.5/weather?q=\",\r\n    foot: \"&appid=056ceaec162d84d33b4cb29dee7ef1d5&units=metric\",\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    Axios.get(apiData.url)\r\n      .then((res) => {\r\n        setisFault(false);\r\n        isSet &&\r\n          setData({\r\n            weather: {\r\n              id: res.data.weather[0].id,\r\n              main: res.data.weather[0].main,\r\n              description: res.data.weather[0].description,\r\n            },\r\n            main: {\r\n              temp: res.data.main.temp,\r\n              feels_like: res.data.main.feels_like,\r\n              temp_min: res.data.main.temp_min,\r\n              temp_max: res.data.main.temp_max,\r\n              pressure: res.data.main.pressure,\r\n              humidity: res.data.main.humidity,\r\n            },\r\n            visibility: res.data.visibility,\r\n            wind: {\r\n              speed: res.data.wind.speed,\r\n              deg: res.data.wind.deg,\r\n            },\r\n            dt: res.data.dt,\r\n            sys: {\r\n              id: res.data.sys.id,\r\n              country: res.data.sys.country,\r\n              sunrise: res.data.sys.sunrise,\r\n              sunset: res.data.sys.sunset,\r\n            },\r\n            id: res.data.id,\r\n            name: res.data.name,\r\n          });\r\n        setApiData((prev) => {\r\n          return {\r\n            city: \"\",\r\n            url: prev.url,\r\n          };\r\n        });\r\n      })\r\n      .catch(function (error) {\r\n        if (error.response) {\r\n          // Request made and server responded\r\n          setApiData((prev) => {\r\n            return {\r\n              city: \"\",\r\n              url: prev.url,\r\n            };\r\n          });\r\n          setisFault(true);\r\n          setisSet(false);\r\n\r\n          seterror({\r\n            error: error.response.status,\r\n            message: error.response.data.message,\r\n          });\r\n        } else if (error.request) {\r\n          // The request was made but no response was received\r\n          setApiData((prev) => {\r\n            return {\r\n              city: \"\",\r\n              url: prev.url,\r\n            };\r\n          });\r\n          setisFault(true);\r\n          setisSet(false);\r\n          seterror((prev) => {\r\n            return { error: prev.error, message: \"Network Connection Is Down\" };\r\n          });\r\n          console.log(error.request);\r\n        } else {\r\n          // Something happened in setting up the request that triggered an Error\r\n          console.log(\"Error\", error.message);\r\n          setApiData((prev) => {\r\n            return {\r\n              city: \"\",\r\n              url: prev.url,\r\n            };\r\n          });\r\n          setisFault(true);\r\n          setisSet(false);\r\n          seterror((prev) => {\r\n            return {\r\n              error: prev.error,\r\n              message: \"Please Check the Files.Problem With the Site\",\r\n            };\r\n          });\r\n        }\r\n      });\r\n  }, [isSet, apiData.url]);\r\n\r\n  function handleChange(event) {\r\n    const value = event.target.value;\r\n    setApiData((prev) => {\r\n      return {\r\n        city: value,\r\n        url: prev.url,\r\n      };\r\n    });\r\n  }\r\n\r\n  function handleClick(event) {\r\n    setApiData((prev) => {\r\n      return {\r\n        city: prev.city,\r\n        url: apiUrl.head + apiData.city + apiUrl.foot,\r\n      };\r\n    });\r\n    setisSet(true);\r\n    // setURL(head + \"rewa\" + foot);\r\n    event.preventDefault();\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <Input\r\n          handleChange={handleChange}\r\n          handle={handleClick}\r\n          city={apiData.city}\r\n        />\r\n        {isFault && <Error error={error} />}\r\n        {isSet && <WeatherData data={data} />}\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App.jsx';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}